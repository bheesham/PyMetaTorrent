import reimport gcimport hashlibimport threadingfrom includes.functions import *from includes.database import *from includes.bencode import *class KickAssTorrents( threading.Thread ):	def __init__( self, db_info, url ):		threading.Thread.__init__( self )				self.dbc = database()		self.dbc = self.dbc.connect( db_info )		self.db = database()				self.download_url_pattern = re.compile( r'href="http://torcache.com/torrent/([a-zA-Z0-9\_\-\(\)/\.\[\]]+).torrent"', re.I )				self.url = url			def run( self ):		page = get_page( self.url )		if page != 0:			matches = download_url_pattern.findall( page )			if len( matches ) > 0:				torrent_url = "http://torcache.com/torrent/" + matches[0] + ".torrent"				torrent_contents = get_page( torrent_url )				if torrent_contents != 0:					torrent_contents = gzip_decom( torrent_contents )					torrent_contents = bdecode( torrent_contents )					self.db.set_torrent_info( self.dbc, self.url, torrent_contents )				else:					pass					#db.torrent_404( self.dbc, self.url )		else:			pass			#db.torrent_404( self.dbc, self.url )		return None